language: cpp
dist: xenial
git:
  submodules: true
env:
  global:
    # Misc
    #- RUN_TESTS=true
    #- COVERAGE=false

#
# Build Dependencies
#
before_script:
  # Add an IPv6 config - see the corresponding Travis issue
  # https://github.com/travis-ci/travis-ci/issues/8361
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
    sudo sh -c 'echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6';
    fi

  #
  # Build Folder
  #
  - mkdir _build
  - cd _build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.11/cmake-3.11.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      brew update
      brew outdated cmake || brew upgrade cmake
    fi

matrix:
  include:
    #
    # Doxygen
    #
    - os: linux
      env:
        - TEST="Doxygen"
      addons:
        apt:
          packages:
            - graphviz
            - doxygen
      script:
        - cmake ..
        - make dox
        - |
          if [[ -s dox/doxygen_warnings.txt ]]; then
            echo "You must fix doxygen before submitting a pull request"
            exit -1
          fi
    #
    # Git Check
    #
    - os: linux
      env:
        - TEST="Git Check"
      script:
        - |
          if [[ -n $(git diff --check HEAD^) ]]; then
            echo "You must remove whitespace before submitting a pull request"
            echo ""
            git diff --check HEAD^
            exit -1
          fi

    #
    # Clang Tidy
    #
    - os: linux
      env:
        - TEST="Clang Tidy"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - clang-tidy-6.0
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DENABLE_CLANG_TIDY=ON -DCMAKE_CXX_COMPILER="clang++-6.0" ..
        - make 2>&1 | tee output.txt
        - |
          if [[ -n $(grep -E "(warning: |error: )" output.txt | grep -v -E "(third_party|_build)")  ]]; then
              echo "You must pass the clang tidy checks before submitting a pull request"
              grep -E "(warning: |error: )" output.txt | grep -v -E "(third_party|_build)"
              exit -1;
          else
              echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
          fi

    #
    # CppCheck
    #
    - os: linux
      env:
        - TEST="CppCheck"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DENABLE_CPPCHECK=ON -DCMAKE_CXX_COMPILER="g++-6" ..
        - make

    #
    # Google Address Sanitizer
    #
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      env:
        - TEST="Google Address Sanitizer"
      script:
        - cmake -Wno-dev -DENABLE_ASAN=ON -DCMAKE_C_COMPILER="gcc-6" -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - ctest --output-on-failure

    #
    # Google Undefined Sanitizer
    #
    - os: linux
      env:
        - TEST="Google Undefined Sanitizer"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DENABLE_USAN=ON -DCMAKE_C_COMPILER="gcc-6" -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - ctest --output-on-failure

    #
    # Google Thread Sanitizer
    #
    - os: linux
      env:
        - TEST="Google Thread Sanitizer"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DENABLE_TSAN=ON -DCMAKE_C_COMPILER="gcc-6" -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - ctest --output-on-failure

    #
    # Valgrind
    #
    - os: linux
      env:
        - TEST="Valgrind"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - valgrind
      script:
        - cmake -Wno-dev -DCMAKE_C_COMPILER="gcc-6" -DCMAKE_CXX_COMPILER="g++-6" ..
        - make
        - ctest -T memcheck --output-on-failure

    #
    # G++ 7
    #
    - os: linux
      env:
        - TEST="G++ 7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      script:
        - cmake -Wno-dev -DCMAKE_C_COMPILER="gcc-7" -DCMAKE_CXX_COMPILER="g++-7" ..
        - make
        - ctest --output-on-failure

    #
    # Clang 4.0
    #
    - os: linux
      env:
        - TEST="Clang 4.0"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-4.0
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DCMAKE_C_COMPILER=clang-4.0 -DCMAKE_CXX_COMPILER=clang++-4.0 ..
        - make
        - ctest --output-on-failure

    #
    # Clang 5.0
    #
    - os: linux
      env:
        - TEST="Clang 5.0"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - gcc-6
            - g++-6
      script:
        - cmake -Wno-dev -DCMAKE_C_COMPILER=clang-5.0 -DCMAKE_CXX_COMPILER=clang++-5.0 ..
        - make
        - ctest --output-on-failure

    #
    # XCode 9.4.1
    #
    - os: osx
      env:
        - TEST="XCode 9.4.1 - OS X 10.13"
      osx_image: xcode9.4
      script:
        - cmake -Wno-dev ..
        - make
        - ctest --output-on-failure

    #
    # XCode 12.0
    #
    - os: osx
      env:
        - TEST="XCode 12.0 - OS X 10.15.5"
      osx_image: xcode12
      script:
        - cmake -Wno-dev ..
        - make
        - ctest --output-on-failure
